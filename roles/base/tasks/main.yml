---
- name: Configure boot/config.txt
  ansible.builtin.template:
    src: boot-config.txt.j2
    dest: /boot/config.txt
    owner: root
    group: root
    mode: 0755
  tags:
    - base

- name: Install necessary packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  tags:
    - base

- name: Download yt-dlp
  ansible.builtin.get_url:
    url: "https://github.com/yt-dlp/yt-dlp/releases/download/{{ yt_dlp_version }}/yt-dlp_linux_aarch64"
    dest: /usr/local/bin/yt-dlp
    owner: root
    group: root
    mode: 0755
  tags:
    - base

- name: Remove unwanted packages
  ansible.builtin.apt:
    name: "{{ item }}"
    autoremove: true
    state: absent
  loop: "{{ absent_packages }}"
  tags:
    - base

- name: Disable unwanted services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop: "{{ disabled_services }}"
  when: disabled_services is defined
  tags:
    - base

- name: Configure sshd
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
  notify: Restart sshd
  tags:
    - base

- name: Configure correct time
  ansible.builtin.file:
    src: /usr/share/zoneinfo/Europe/Prague
    dest: /etc/localtime
    force: true
    state: link
  tags:
    - base

- name: Configure locales
  ansible.builtin.template:
    src: locale.gen.j2
    dest: /etc/locale.gen
    owner: root
    group: root
    mode: 0644
  notify: Generate locales
  tags:
    - base

- name: Configure /etc/default/locale
  ansible.builtin.lineinfile:
    path: /etc/default/locale
    line: "LANG=en_US.UTF-8"
    regexp: LANG
    create: true
    state: present
    owner: root
    group: root
    mode: 0644
  tags:
    - base

- name: Set machine hostname
  ansible.builtin.hostname:
    name: "{{ network.hostname }}"
  tags:
    - base

- name: Remove /etc/resolvconf.conf
  ansible.builtin.file:
    path: /etc/resolvconf.conf
    state: absent

- name: Configure resolv.conf
  ansible.builtin.template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: 0644
    attr: +i
  notify: Restart dhcpcd
  tags:
    - base

- name: Set hosts file
  ansible.builtin.template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
    attr: +i
  tags:
    - base

- name: Configure dhcpcd.conf
  ansible.builtin.template:
    src: dhcpcd.conf.j2
    dest: /etc/dhcpcd.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart dhcpcd
  tags:
    - base

- name: Configure ENV variables
  ansible.builtin.template:
    src: vars.sh.j2
    dest: /etc/profile.d/vars.sh
    owner: root
    group: root
    mode: 0755
  tags:
    - base

- name: Configure pi group
  ansible.builtin.group:
    name: pi
    state: present
  tags:
    - base
    - user

- name: Configure pi user
  ansible.builtin.user:
    name: pi
    groups: [ "pi", "users", "sudo" ]
    state: present
  tags:
    - base
    - user

- name: Configure sudoers
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    line: "%sudo ALL=(ALL:ALL) NOPASSWD: ALL"
    insertafter: "%sudo.+ALL"
    regexp: "NOPASSWD:.+ALL"
    state: present
  tags:
    - base
    - user

- name: Prepare mount points
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ mount.points }}"
  when: mount.points is defined
  tags:
    - base
