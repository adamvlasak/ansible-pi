#!/bin/bash

# IPv4

# Flush all current rules from iptables
iptables -Z
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -t raw -F
iptables -t raw -X
iptables -F
iptables -X

# Set default policies for INPUT, FORWARD and OUTPUT chains
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT DROP

# Prerouting
iptables -A PREROUTING -t mangle -m conntrack --ctstate INVALID -j DROP
iptables -A PREROUTING -t mangle -p tcp ! --syn -m conntrack --ctstate NEW -j DROP
iptables -A PREROUTING -t mangle -p tcp -m conntrack --ctstate NEW -m tcpmss ! --mss 536:65535 -j DROP

# Bogus TCP flags
iptables -A PREROUTING -t mangle -p tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags FIN,ACK FIN -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ACK,URG URG -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ACK,FIN FIN -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ACK,PSH PSH -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ALL ALL -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ALL NONE -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ALL SYN,FIN,PSH,URG -j DROP
iptables -A PREROUTING -t mangle -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

# Spoofing
iptables -A PREROUTING -t mangle -s 224.0.0.0/3 -j DROP
iptables -A PREROUTING -t mangle -s 169.254.0.0/16 -j DROP
iptables -A PREROUTING -t mangle -s 172.16.0.0/12 -j DROP
iptables -A PREROUTING -t mangle -s 192.0.2.0/24 -j DROP
iptables -A PREROUTING -t mangle -s 10.0.0.0/8 -j DROP
iptables -A PREROUTING -t mangle -s 240.0.0.0/5 -j DROP
iptables -A PREROUTING -t mangle -s 127.0.0.0/8 ! -i lo -j DROP

{% if network.router != false %}
# Force DNS
iptables -A PREROUTING -t nat -s {{ network.subnet }} ! -d {{ network.ip }}/32 -p tcp --dport 53 -j DNAT --to {{ network.ip }}
iptables -A PREROUTING -t nat -s {{ network.subnet }} ! -d {{ network.ip }}/32 -p udp --dport 53 -j DNAT --to {{ network.ip }}
{% endif %}

# Allow SSH connections on tcp port 22
iptables -A INPUT -s {{ network.subnet }} -d {{ network.ip }}/32 -i eth0 -m conntrack --ctstate NEW -p tcp -m tcp --dport 22 -j ACCEPT

# Incoming ICMP
iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -d {{ network.ip }} -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT

# Outgoing ICMP
iptables -A OUTPUT -p icmp --icmp-type 0 -s {{ network.ip }} -d 0/0 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Allowed input packets
iptables -A INPUT -i lo -d 127.0.0.1/32 -j ACCEPT
iptables -A INPUT -i eth0 -s {{ network.subnet }} -d 239.255.255.250/32 -m conntrack --ctstate NEW -p udp -m udp --dport 1900 -j ACCEPT
iptables -A INPUT -i eth0 -s {{ network.subnet }} -d {{ network.ip }}/32 -m conntrack --ctstate NEW -p udp -m udp --dport 53 -j ACCEPT
iptables -A INPUT -i eth0 -s {{ network.subnet }} -d {{ network.ip }}/32 -m conntrack --ctstate NEW -p tcp -m tcp --dport 445 -j ACCEPT
iptables -A INPUT -i eth0 -s {{ network.subnet }} -d {{ network.ip }}/32 -m conntrack --ctstate NEW -p tcp -m tcp --dport 8200 -j ACCEPT
iptables -A INPUT -i eth0 -s {{ network.subnet }} -d {{ network.ip }}/32 -m conntrack --ctstate NEW -p tcp -m tcp --dport 80 -j ACCEPT
iptables -A INPUT -i eth0 -d {{ network.ip }}/32 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -j LOG --log-prefix "INPUT DROP: "
iptables -A INPUT -f -j DROP
iptables -A INPUT -m tcp -p tcp -j REJECT --reject-with tcp-reset
iptables -A INPUT -m udp -p udp -j REJECT --reject-with icmp-port-unreachable
iptables -A INPUT -j REJECT --reject-with icmp-proto-unreachable

# Allowed output packets
iptables -A OUTPUT -o lo -s 127.0.0.1/32 -j ACCEPT
iptables -A OUTPUT -o eth0 -s {{ network.ip }}/32 -d 239.255.255.250 -m conntrack --ctstate NEW -m udp -p udp --sport 1900 -j ACCEPT
iptables -A OUTPUT -o eth0 -s {{ network.ip }}/32 -m conntrack --ctstate NEW -m tcp -p tcp --dport 80 -j ACCEPT
iptables -A OUTPUT -o eth0 -s {{ network.ip }}/32 -m conntrack --ctstate NEW -m tcp -p tcp --dport 443 -j ACCEPT
iptables -A OUTPUT -o eth0 -s {{ network.ip }}/32 -m conntrack --ctstate NEW -m udp -p udp --dport 443 -j ACCEPT
iptables -A OUTPUT -o eth0 -s {{ network.ip }}/32 -m conntrack --ctstate NEW -m udp -p udp --dport 123 -j ACCEPT
iptables -A OUTPUT -o eth0 -s {{ network.ip }}/32 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -m conntrack --ctstate NEW -m udp -p udp --sport 68 --dport 67 -j ACCEPT
iptables -A OUTPUT -j LOG --log-prefix "OUTPUT DROP: "
iptables -A OUTPUT -m tcp -p tcp -j REJECT --reject-with tcp-reset
iptables -A OUTPUT -m udp -p udp -j REJECT --reject-with icmp-port-unreachable
iptables -A OUTPUT -j REJECT --reject-with icmp-proto-unreachable

{% if network.router != false %}
# NAT
iptables -A POSTROUTING -t nat -o eth0 -s {{ network.subnet }} -j SNAT --to-source {{ network.ip }}

# FORWARD
iptables -A FORWARD -i eth0 -o eth0 -d {{ network.subnet }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i eth0 -s {{ network.subnet }} -o eth0 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A FORWARD -j LOG --log-prefix "FORWARD DROP: "
iptables -A FORWARD -m tcp -p tcp -j REJECT --reject-with tcp-reset
iptables -A FORWARD -m udp -p udp -j REJECT --reject-with icmp-port-unreachable
iptables -A FORWARD -j REJECT --reject-with icmp-proto-unreachable
{% endif %}

# IPv6

# Flush all current rules from iptables
ip6tables -F
ip6tables -X

# Set default policies for INPUT, FORWARD and OUTPUT chains
ip6tables -P INPUT DROP
ip6tables -P FORWARD DROP
ip6tables -P OUTPUT DROP
