---
- name: Remove dnscrypt-proxy package
  ansible.builtin.apt:
    name: dnscrypt-proxy
    state: absent
  tags:
    - dnscrypt-proxy

- name: Check dnscrypt-proxy version
  ansible.builtin.command: dnscrypt-proxy --version
  changed_when: false
  register: installed_version
  tags:
    - dnscrypt-proxy

- name: Install dnscrypt-proxy
  when: installed_version.stdout != dnscrypt_proxy.version
        and not ansible_check_mode
  tags:
    - dnscrypt-proxy
  block:
    - name: Download dnscrypt-proxy
      ansible.builtin.get_url:
        url: "{{ download_url }}"
        dest: /tmp
        owner: root
        group: root
        mode: 0644

    - name: Extract tarball
      ansible.builtin.unarchive:
        src: "/tmp/{{ tarball }}"
        dest: /tmp
        remote_src: true

    - name: Copy binary to /usr/sbin/dnscrypt_proxy
      ansible.builtin.copy:
        src: "/tmp/linux-{{ arch }}/dnscrypt-proxy"
        dest: /usr/sbin/dnscrypt-proxy
        remote_src: true
        owner: root
        group: root
        mode: 0755

    - name: Delete both unpacked directory and tarball
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/linux-{{ arch }}"
        - "/tmp/{{ tarball }}"

- name: Configure systemd service file
  ansible.builtin.template:
    src: dnscrypt-proxy.service.j2
    dest: /etc/systemd/system/dnscrypt-proxy.service
    owner: root
    group: root
    mode: 0755
  notify: Restart dnscrypt-proxy
  tags:
    - dnscrypt-proxy

- name: Configure dnscrypt-proxy
  ansible.builtin.template:
    src: dnscrypt-proxy.toml.j2
    dest: /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    owner: root
    group: root
    mode: 0444
  notify: Restart dnscrypt-proxy
  tags:
    - dnscrypt-proxy

- name: Configure allowed-names.txt
  ansible.builtin.template:
    src: allowed-names.txt.j2
    dest: /etc/dnscrypt-proxy/allowed-names.txt
    owner: root
    group: root
    mode: 0444
  when: dnscrypt_proxy.allowed_names is defined
  notify: Restart dnscrypt-proxy
  tags:
    - dnscrypt-proxy

- name: Configure blocked-ips.txt
  ansible.builtin.template:
    src: blocked-ips.txt.j2
    dest: /etc/dnscrypt-proxy/blocked-ips.txt
    owner: root
    group: root
    mode: 0444
  notify: Restart dnscrypt-proxy
  tags:
    - dnscrypt-proxy

- name: Configure forwarding-rules.txt
  ansible.builtin.template:
    src: forwarding-rules.txt.j2
    dest: /etc/dnscrypt-proxy/forwarding-rules.txt
    owner: root
    group: root
    mode: 0444
  when: dnscrypt_proxy.forwarding_rules is defined
  notify: Restart dnscrypt-proxy
  tags:
    - dnscrypt-proxy

- name: Configure cloaking-rules.txt
  ansible.builtin.template:
    src: cloaking-rules.txt.j2
    dest: /etc/dnscrypt-proxy/cloaking-rules.txt
    owner: root
    group: root
    mode: 0444
  when: dnscrypt_proxy.cloaking_rules is defined
  notify: Restart dnscrypt-proxy
  tags:
    - dnscrypt-proxy

- name: Set permissions to /etc/dnscrypt-proxy
  ansible.builtin.file:
    path: /etc/dnscrypt-proxy
    state: directory
    owner: root
    group: root
    mode: 0555
  tags:
    - dnscrypt-proxy

- name: Prepare directory for blocklist generator and its config
  ansible.builtin.file:
    path: "{{ blocked_names_generator_path }}"
    state: directory
    owner: root
    group: root
    mode: 0500
  tags:
    - blocked-names

- name: Download blocklist generator
  ansible.builtin.get_url:
    url: https://github.com/DNSCrypt/dnscrypt-proxy/raw/master/utils/generate-domains-blocklist/generate-domains-blocklist.py
    dest: "{{ blocked_names_generator_path }}/generate-domains-blocklist.py"
    owner: root
    group: root
    mode: 0400
  notify: Generate blocked names
  tags:
    - blocked-names

- name: Configure domains-blocklist.conf
  ansible.builtin.template:
    src: domains-blocklist.conf.j2
    dest: "{{ blocked_names_generator_path }}/domains-blocklist.conf"
    owner: root
    group: root
    mode: 0400
  notify: Generate blocked names
  tags:
    - blocked-names

- name: Configure domains-blocklist-local-additions.txt
  ansible.builtin.template:
    src: domains-blocklist-local-additions.txt.j2
    dest: "{{ blocked_names_generator_path }}/domains-blocklist-local-additions.txt"
    owner: root
    group: root
    mode: 0400
  notify: Generate blocked names
  tags:
    - blocked-names

- name: Configure domains-allowlist.txt from github
  ansible.builtin.get_url:
    url: https://github.com/DNSCrypt/dnscrypt-proxy/raw/master/utils/generate-domains-blocklist/domains-allowlist.txt
    dest: "{{ blocked_names_generator_path }}/domains-allowlist.txt"
    owner: root
    group: root
    mode: 0400
  notify: Generate blocked names
  tags:
    - blocked-names

- name: Create empty domains-time-restricted.txt
  ansible.builtin.file:
    dest: "{{ blocked_names_generator_path }}/domains-time-restricted.txt"
    state: touch
    owner: root
    group: root
    mode: 0400
  tags:
    - blocked-names

- name: Configure helper script
  ansible.builtin.template:
    src: blocked-names-generator.sh.j2
    dest: "{{ blocked_names_generator_helper_path }}"
    owner: root
    group: root
    mode: 0500
  notify: Generate blocked names
  tags:
    - blocked-names

- name: Configure cron script
  ansible.builtin.template:
    src: cron.j2
    dest: /etc/cron.daily/blocked-names-generator
    owner: root
    group: root
    mode: 0500
  tags:
    - blocked-names
